let SK;


let animation_count;
let animation_current_cell;
let animation_current_vector;
let animation_ended;
let animation_entered_frame;
let animation_frame_time;
let animation_index;
let animation_name;
let animation_script_name;
let animation_script_named;
let assign_animation_with_script;
let assign_animation_with_script_and_sound;
let assign_animation_index_with_script;
let assign_animation_index_with_script_and_sound;
let assign_animation_with_script_named;
let assign_animation_with_script_named_and_sound;
let assign_animation_index;
let assign_animation_index_with_sound;
let assign_animation;
let assign_animation_with_sound;
let create_animation_from_index_with_sound;
let create_animation;
let create_animation_with_sound;
let create_animation_from_script_named;
let create_animation_from_script_named_with_sound;
let free_all_animation_scripts;
let free_animation;
let free_animation_script;
let free_animation_script_with_name;
let has_animation_named;
let has_animation_script;
let load_animation_script;
let restart_animation;
let restart_animation_with_sound;
let update_animation_percent_with_sound;
let update_animation;
let update_animation_percent;



let fade_music_in_named;
let fade_music_in_named_with_times;
let fade_music_in;
let fade_music_in_with_times;
let fade_music_out;
let free_all_music;
let free_music;
let has_music;
let load_music;
let music_filename;
let music_name;
let music_named;
let music_playing;
let music_volume;
let pause_music;
let play_music_named;
let play_music_named_with_times;
let play_music;
let play_music_with_times;
let play_music_with_times_and_volume;
let resume_music;
let set_music_volume;
let stop_music;
let fade_all_sound_effects_out;
let fade_sound_effect_out;
let free_all_sound_effects;
let free_sound_effect;
let has_sound_effect;
let load_sound_effect;
let play_sound_effect_named;
let play_sound_effect_named_with_volume;
let play_sound_effect_named_with_times;
let play_sound_effect_named_with_times_and_volume;
let play_sound_effect;
let play_sound_effect_with_volume;
let play_sound_effect_with_times;
let play_sound_effect_with_times_and_volume;
let sound_effect_filename;
let sound_effect_name;
let sound_effect_named;
let sound_effect_playing_named;
let sound_effect_playing;
let stop_sound_effect_named;
let stop_sound_effect;
let audio_ready;
let close_audio;
let open_audio;



let camera_position;
let camera_x;
let camera_y;
let center_camera_on_vector;
let center_camera_on;
let move_camera_by_vector;
let move_camera_by;
let move_camera_to_point;
let move_camera_to;
let point_in_window;
let point_on_screen;
let rect_in_window;
let rect_on_screen;
let screen_center;
let screen_rectangle;
let set_camera_position;
let set_camera_x;
let set_camera_y;
let to_screen_point;
let to_screen_rectangle;
let to_screen_x;
let to_screen_y;
let to_world;
let to_world_x;
let to_world_y;
let vector_world_to_screen;
let window_area;



let alpha_of;
let blue_of;
let brightness_of;
let color_alice_blue;
let color_antique_white;
let color_aqua;
let color_aquamarine;
let color_azure;
let color_beige;
let color_bisque;
let color_black;
let color_blanched_almond;
let color_blue;
let color_blue_violet;
let color_bright_green;
let color_brown;
let color_burly_wood;
let color_cadet_blue;
let color_chartreuse;
let color_chocolate;
let color_coral;
let color_cornflower_blue;
let color_cornsilk;
let color_crimson;
let color_cyan;
let color_dark_blue;
let color_dark_cyan;
let color_dark_goldenrod;
let color_dark_gray;
let color_dark_green;
let color_dark_khaki;
let color_dark_magenta;
let color_dark_olive_green;
let color_dark_orange;
let color_dark_orchid;
let color_dark_red;
let color_dark_salmon;
let color_dark_sea_green;
let color_dark_slate_blue;
let color_dark_slate_gray;
let color_dark_turquoise;
let color_dark_violet;
let color_deep_pink;
let color_deep_sky_blue;
let color_dim_gray;
let color_dodger_blue;
let color_firebrick;
let color_floral_white;
let color_forest_green;
let color_fuchsia;
let color_gainsboro;
let color_ghost_white;
let color_gold;
let color_goldenrod;
let color_gray;
let color_green;
let color_green_yellow;
let color_honeydew;
let color_hot_pink;
let color_indian_red;
let color_indigo;
let color_ivory;
let color_khaki;
let color_lavender;
let color_lavender_blush;
let color_lawn_green;
let color_lemon_chiffon;
let color_light_blue;
let color_light_coral;
let color_light_cyan;
let color_light_goldenrod_yellow;
let color_light_gray;
let color_light_green;
let color_light_pink;
let color_light_salmon;
let color_light_sea_green;
let color_light_sky_blue;
let color_light_slate_gray;
let color_light_steel_blue;
let color_light_yellow;
let color_lime;
let color_lime_green;
let color_linen;
let color_magenta;
let color_maroon;
let color_medium_aquamarine;
let color_medium_blue;
let color_medium_orchid;
let color_medium_purple;
let color_medium_sea_green;
let color_medium_slate_blue;
let color_medium_spring_green;
let color_medium_turquoise;
let color_medium_violet_red;
let color_midnight_blue;
let color_mint_cream;
let color_misty_rose;
let color_moccasin;
let color_navajo_white;
let color_navy;
let color_old_lace;
let color_olive;
let color_olive_drab;
let color_orange;
let color_orange_red;
let color_orchid;
let color_pale_goldenrod;
let color_pale_green;
let color_pale_turquoise;
let color_pale_violet_red;
let color_papaya_whip;
let color_peach_puff;
let color_peru;
let color_pink;
let color_plum;
let color_powder_blue;
let color_purple;
let color_red;
let color_rosy_brown;
let color_royal_blue;
let color_saddle_brown;
let color_salmon;
let color_sandy_brown;
let color_sea_green;
let color_sea_shell;
let color_sienna;
let color_silver;
let color_sky_blue;
let color_slate_blue;
let color_slate_gray;
let color_snow;
let color_spring_green;
let color_steel_blue;
let color_swinburne_red;
let color_tan;
let color_teal;
let color_thistle;
let color_to_string;
let color_tomato;
let color_transparent;
let color_turquoise;
let color_violet;
let color_wheat;
let color_white;
let color_white_smoke;
let color_yellow;
let color_yellow_green;
let green_of;
let hsb_color;
let hue_of;
let random_color;
let random_rgb_color;
let red_of;
let rgb_color_from_double;
let rgb_color;
let rgba_color_from_double;
let rgba_color;
let saturation_of;
let string_to_color;



let database_named;
let error_message;
let free_all_databases;
let free_all_query_results;
let free_database;
let free_database_named;
let free_query_result;
let get_next_row;
let has_database;
let has_row;
let open_database;
let query_column_count;
let query_column_for_bool;
let query_column_for_double;
let query_column_for_int;
let query_column_for_string;
let query_success;
let query_type_of_col;
let reset_query_result;
let rows_changed;
let run_sql;
let run_sql_from_name;



let closest_point_on_line;
let closest_point_on_lines;
let line_from_point_to_point;
let line_from_start_with_offset;
let line_from_vector;
let line_from;
let line_intersection_point;
let line_intersects_circle;
let line_intersects_lines;
let line_intersects_rect;
let line_length;
let line_length_squared;
let line_mid_point;
let line_normal;
let line_to_string;
let lines_intersect;
let inset_rectangle;
let intersection;
let rectangle_around_circle;
let rectangle_around_line;
let rectangle_around_quad;
let rectangle_around_triangle;
let rectangle_bottom;
let rectangle_center;
let rectangle_from_point_and_size;
let rectangle_from_points;
let rectangle_from;
let rectangle_left;
let rectangle_offset_by;
let rectangle_right;
let rectangle_to_string;
let rectangle_top;
let rectangles_intersect;
let triangle_barycenter;
let triangle_from;
let triangle_from__from_coordinates;
let triangle_rectangle_intersect;
let triangle_to_string;
let triangles_intersect;
let point_at;
let point_at_origin;
let point_in_circle;
let point_in_quad;
let point_in_rectangle;
let point_in_triangle;
let point_line_distance;
let point_offset_by;
let point_offset_from_origin;
let point_on_line;
let point_on_line_with_proximity;
let point_point_angle;
let point_point_distance;
let point_to_string;
let random_bitmap_point;
let random_screen_point;
let random_window_point;
let same_point;
let center_point_circle;
let circle_at;
let circle_at_from_points;
let circle_radius;
let circle_x;
let circle_y;
let circles_intersect;
let closest_point_on_circle;
let closest_point_on_line_from_circle;
let closest_point_on_rect_from_circle;
let distant_point_on_circle;
let distant_point_on_circle_heading;
let ray_circle_intersect_distance;
let tangent_points;
let widest_points;
let quad_from_points;
let quad_from_rectangle;
let quad_from_rectangle_with_transformation;
let quad_from;
let quads_intersect;
let set_quad_point;
let cosine;
let sine;
let tangent;



let draw_circle_record;
let draw_circle_record_with_options;
let draw_circle;
let draw_circle_with_options;
let draw_circle_on_bitmap;
let draw_circle_on_bitmap_with_options;
let draw_circle_on_window;
let draw_circle_on_window_with_options;
let fill_circle_record;
let fill_circle_record_with_options;
let fill_circle;
let fill_circle_with_options;
let fill_circle_on_bitmap;
let fill_circle_on_bitmap_with_options;
let fill_circle_on_window;
let fill_circle_on_window_with_options;
let draw_text_font_as_string;
let draw_text_with_options_font_as_string;
let draw_text_no_font_no_size;
let draw_text_no_font_no_size_with_options;
let draw_text;
let draw_text_with_options;
let draw_text_on_bitmap_font_as_string;
let draw_text_on_bitmap_with_options_font_as_string;
let draw_text_on_bitmap_no_font_no_size;
let draw_text_on_bitmap_no_font_no_size_with_options;
let draw_text_on_bitmap;
let draw_text_on_bitmap_with_options;
let draw_text_on_window_font_as_string;
let draw_text_on_window_with_options_font_as_string;
let draw_text_on_window_no_font_no_size;
let draw_text_on_window_no_font_no_size_with_options;
let draw_text_on_window;
let draw_text_on_window_with_options;
let font_has_size_name_as_string;
let font_has_size;
let font_load_size_name_as_string;
let font_load_size;
let font_named;
let free_all_fonts;
let free_font;
let get_font_style_name_as_string;
let get_font_style;
let has_font;
let has_font_name_as_string;
let load_font;
let set_font_style_name_as_string;
let set_font_style;
let text_height_font_named;
let text_height;
let text_width_font_named;
let text_width;
let draw_quad;
let draw_quad_with_options;
let draw_quad_on_bitmap;
let draw_quad_on_bitmap_with_options;
let draw_quad_on_window;
let draw_quad_on_window_with_options;
let draw_rectangle_record;
let draw_rectangle_record_with_options;
let draw_rectangle;
let draw_rectangle_with_options;
let draw_rectangle_on_bitmap_record;
let draw_rectangle_on_bitmap_record_with_options;
let draw_rectangle_on_bitmap;
let draw_rectangle_on_bitmap_with_options;
let draw_rectangle_on_window_record;
let draw_rectangle_on_window_record_with_options;
let draw_rectangle_on_window;
let draw_rectangle_on_window_with_options;
let fill_quad;
let fill_quad_with_options;
let fill_quad_on_bitmap;
let fill_quad_on_bitmap_with_options;
let fill_quad_on_window;
let fill_quad_on_window_with_options;
let fill_rectangle_record;
let fill_rectangle_record_with_options;
let fill_rectangle;
let fill_rectangle_with_options;
let fill_rectangle_on_bitmap_record;
let fill_rectangle_on_bitmap_record_with_options;
let fill_rectangle_on_bitmap;
let fill_rectangle_on_bitmap_with_options;
let fill_rectangle_on_window_record;
let fill_rectangle_on_window_record_with_options;
let fill_rectangle_on_window;
let fill_rectangle_on_window_with_options;
let current_clip;
let current_clip_for_bitmap;
let current_clip_for_window;
let pop_clip_for_window;
let pop_clip;
let pop_clip_for_bitmap;
let push_clip_for_window;
let push_clip_for_bitmap;
let push_clip;
let reset_clip_for_bitmap;
let reset_clip;
let reset_clip_for_window;
let set_clip;
let set_clip_for_bitmap;
let set_clip_for_window;
let draw_triangle_record;
let draw_triangle_record_with_options;
let draw_triangle;
let draw_triangle_with_options;
let draw_triangle_on_bitmap_record;
let draw_triangle_on_bitmap_record_with_options;
let draw_triangle_on_bitmap;
let draw_triangle_on_bitmap_with_options;
let draw_triangle_on_window_record;
let draw_triangle_on_window_record_with_options;
let draw_triangle_on_window;
let draw_triangle_on_window_with_options;
let fill_triangle_record;
let fill_triangle_record_with_options;
let fill_triangle;
let fill_triangle_with_options;
let fill_triangle_on_bitmap_record;
let fill_triangle_on_bitmap_record_with_options;
let fill_triangle_on_bitmap;
let fill_triangle_on_bitmap_with_options;
let fill_triangle_on_window_record;
let fill_triangle_on_window_record_with_options;
let fill_triangle_on_window;
let fill_triangle_on_window_with_options;
let draw_ellipse_within_rectangle;
let draw_ellipse_within_rectangle_with_options;
let draw_ellipse;
let draw_ellipse_with_options;
let draw_ellipse_on_bitmap_within_rectangle;
let draw_ellipse_on_bitmap_within_rectangle_with_options;
let draw_ellipse_on_bitmap;
let draw_ellipse_on_bitmap_with_options;
let draw_ellipse_on_window_within_rectangle;
let draw_ellipse_on_window_within_rectangle_with_options;
let draw_ellipse_on_window;
let draw_ellipse_on_window_with_options;
let fill_ellipse_within_rectangle;
let fill_ellipse_within_rectangle_with_options;
let fill_ellipse;
let fill_ellipse_with_options;
let fill_ellipse_on_bitmap_within_rectangle;
let fill_ellipse_on_bitmap_within_rectangle_with_options;
let fill_ellipse_on_bitmap;
let fill_ellipse_on_bitmap_with_options;
let fill_ellipse_on_window_within_rectangle;
let fill_ellipse_on_window_within_rectangle_with_options;
let fill_ellipse_on_window;
let fill_ellipse_on_window_with_options;
let bitmap_bounding_circle;
let bitmap_bounding_rectangle;
let bitmap_bounding_rectangle_at_location;
let bitmap_cell_center;
let bitmap_cell_circle;
let bitmap_cell_circle_at_point;
let bitmap_cell_circle_at_point_with_scale;
let bitmap_cell_columns;
let bitmap_cell_count;
let bitmap_cell_height;
let bitmap_cell_offset;
let bitmap_cell_rectangle;
let bitmap_cell_rectangle_at_point;
let bitmap_cell_rows;
let bitmap_cell_width;
let bitmap_center;
let bitmap_filename;
let bitmap_height;
let bitmap_height_of_bitmap_named;
let bitmap_name;
let bitmap_named;
let bitmap_rectangle_of_cell;
let bitmap_set_cell_details;
let bitmap_width;
let bitmap_width_of_bitmap_named;
let clear_bitmap;
let clear_bitmap_named;
let create_bitmap;
let draw_bitmap;
let draw_bitmap_with_options;
let draw_bitmap_named;
let draw_bitmap_named_with_options;
let draw_bitmap_on_bitmap_on_bitmap;
let draw_bitmap_on_bitmap_on_bitmap_with_options;
let draw_bitmap_on_window;
let draw_bitmap_on_window_with_options;
let free_all_bitmaps;
let free_bitmap;
let has_bitmap;
let load_bitmap;
let pixel_drawn_at_point_pt;
let pixel_drawn_at_point;
let pixel_drawn_at_point_in_cell_pt;
let pixel_drawn_at_point_in_cell;
let setup_collision_mask;
let draw_line_record;
let draw_line_record_with_options;
let draw_line_point_to_point;
let draw_line_point_to_point_with_options;
let draw_line;
let draw_line_with_options;
let draw_line_on_bitmap_record;
let draw_line_on_bitmap_record_with_options;
let draw_line_on_bitmap_point_to_point;
let draw_line_on_bitmap_point_to_point_with_options;
let draw_line_on_bitmap;
let draw_line_on_bitmap_with_options;
let draw_line_on_window_record;
let draw_line_on_window_record_with_options;
let draw_line_on_window_point_to_point;
let draw_line_on_window_point_to_point_with_options;
let draw_line_on_window;
let draw_line_on_window_with_options;
let option_defaults;
let option_draw_to_bitmap;
let option_draw_to_bitmap_with_options;
let option_draw_to_window;
let option_draw_to_window_with_options;
let option_flip_x;
let option_flip_x_with_options;
let option_flip_xy;
let option_flip_xy_with_options;
let option_flip_y;
let option_flip_y_with_options;
let option_line_width;
let option_line_width_with_options;
let option_part_bmp;
let option_part_bmp_with_options;
let option_part_bmp_from_rectangle;
let option_part_bmp_from_rectangle_with_options;
let option_rotate_bmp;
let option_rotate_bmp_with_anchor;
let option_rotate_bmp_with_anchor_and_options;
let option_rotate_bmp_with_options;
let option_scale_bmp;
let option_scale_bmp_with_options;
let option_to_screen;
let option_to_screen_with_options;
let option_to_world;
let option_to_world_with_options;
let option_with_animation;
let option_with_animation_with_options;
let option_with_bitmap_cell;
let option_with_bitmap_cell_with_options;
let clear_screen_to_white;
let clear_screen;
let display_details;
let display_height;
let display_name;
let display_width;
let display_x;
let display_y;
let number_of_displays;
let refresh_screen;
let refresh_screen_with_target_fps;
let save_bitmap;
let screen_height;
let screen_width;
let take_screenshot;
let take_screenshot_of_window;
let draw_pixel_at_point;
let draw_pixel_at_point_with_options;
let draw_pixel;
let draw_pixel_with_options;
let draw_pixel_on_bitmap_at_point;
let draw_pixel_on_bitmap_at_point_with_options;
let draw_pixel_on_bitmap;
let draw_pixel_on_bitmap_with_options;
let draw_pixel_on_window_at_point;
let draw_pixel_on_window_at_point_with_options;
let draw_pixel_on_window;
let draw_pixel_on_window_with_options;
let get_pixel_from_bitmap_at_point;
let get_pixel_from_bitmap;
let get_pixel_at_point;
let get_pixel;
let get_pixel_from_window_at_point;
let get_pixel_from_window;
let get_pixel_from_window_at_point_from_window;
let get_pixel_from_window_from_window;


let mouse_button;
let key_code;

let process_events;
let quit_requested;
let reset_quit;
let draw_collected_text;
let end_reading_text;
let end_reading_text_in_window;
let reading_text;
let reading_text_in_window;
let start_reading_text;
let start_reading_text_with_initial_text;
let start_reading_text_in_window;
let start_reading_text_in_window_with_initial_text;
let text_entry_cancelled;
let text_entry_cancelled_in_window;
let text_input;
let text_input_in_window;
let hide_mouse;
let mouse_clicked;
let mouse_down;
let mouse_movement;
let mouse_position;
let mouse_position_vector;
let mouse_shown;
let mouse_up;
let mouse_wheel_scroll;
let mouse_x;
let mouse_y;
let move_mouse;
let move_mouse_to_point;
let show_mouse;
let show_mouse_with_boolean;
let any_key_pressed;
let key_down;
let key_name;
let key_released;
let key_typed;
let key_up;



let create_json;
let create_json_from_string;
let free_all_json;
let free_json;
let json_count_keys;
let json_from_color;
let json_from_file;
let json_from_string;
let json_has_key;
let json_read_bool;
let json_read_number;
let json_read_number_as_double;
let json_read_number_as_int;
let json_read_object;
let json_read_string;
let json_set_bool;
let json_set_number_integer;
let json_set_number_double;
let json_set_number_float;
let json_set_object;
let json_set_string;
let json_to_color;
let json_to_file;
let json_to_string;


let log_level;
let log_mode;

let close_log_process;
let init_custom_logger;
let init_custom_logger__name_override_mode;
let log;


let http_method;
let connection_type;

let download_bitmap;
let download_font;
let download_music;
let download_sound_effect;
let free_response;
let http_get;
let http_response_to_string;
let save_response_to_file;
let has_incoming_requests;
let is_delete_request_for;
let is_get_request_for;
let is_options_request_for;
let is_post_request_for;
let is_put_request_for;
let is_request_for;
let is_trace_request_for;
let next_web_request;
let request_body;
let request_has_query_parameter;
let request_method;
let request_query_parameter;
let request_query_string;
let request_uri;
let send_css_file_response;
let send_file_response;
let send_html_file_response;
let send_javascript_file_response;
let start_web_server_with_default_port;
let start_web_server;
let stop_web_server;
let accept_all_new_connections;
let accept_new_connection;
let broadcast_message;
let broadcast_message_to_all;
let broadcast_message_to_server_named;
let check_network_activity;
let clear_messages_from_name;
let clear_messages_from_connection;
let clear_messages_from_server;
let close_all_connections;
let close_all_servers;
let close_connection;
let close_connection_named;
let close_message;
let close_server_named;
let close_server;
let connection_count_named;
let connection_count;
let connection_ip;
let connection_ip_from_name;
let connection_named;
let connection_port;
let connection_port_from_name;
let create_server_with_port;
let create_server_with_port_and_protocol;
let dec_to_hex;
let fetch_new_connection;
let has_connection;
let has_messages;
let has_messages_on_connection;
let has_messages_on_name;
let has_messages_on_server;
let has_new_connections;
let has_server;
let hex_str_to_ipv4;
let hex_to_dec_string;
let ipv4_to_dec;
let ipv4_to_hex;
let ipv4_to_str;
let is_connection_open;
let is_connection_open_from_name;
let last_connection_named;
let last_connection;
let message_connection;
let message_count_on_server;
let message_count_on_connection;
let message_count_from_name;
let message_data;
let message_host;
let message_port;
let message_protocol;
let my_ip;
let name_for_connection;
let new_connection_count;
let open_connection;
let open_connection_with_protocol;
let read_message;
let read_message_from_connection;
let read_message_from_name;
let read_message_from_server;
let read_message_data_from_name;
let read_message_data_from_connection;
let read_message_data_from_server;
let reconnect;
let reconnect_from_name;
let release_all_connections;
let reset_new_connection_count;
let retrieve_connection_named;
let retrieve_connection;
let send_message_to_connection;
let send_message_to_name;
let server_has_new_connection_named;
let server_has_new_connection;
let server_named;
let set_udp_packet_size;
let udp_packet_size;



let bitmap_circle_collision_at_point;
let bitmap_circle_collision;
let bitmap_circle_collision_for_cell_with_translation;
let bitmap_circle_collision_for_cell_at_point;
let bitmap_circle_collision_for_cell;
let bitmap_collision;
let bitmap_collision_at_points;
let bitmap_collision_for_cells_with_translations;
let bitmap_collision_for_cells_at_points;
let bitmap_collision_for_cells;
let bitmap_point_collision_with_translation;
let bitmap_point_collision_at_point;
let bitmap_point_collision;
let bitmap_point_collision_for_cell_with_translation;
let bitmap_point_collision_for_cell_at_point;
let bitmap_point_collision_for_cell;
let bitmap_rectangle_collision_at_point;
let bitmap_rectangle_collision;
let bitmap_rectangle_collision_for_cell_with_translation;
let bitmap_rectangle_collision_for_cell_at_point;
let bitmap_rectangle_collision_for_cell;
let sprite_bitmap_collision;
let sprite_bitmap_collision_with_cell_at_point;
let sprite_bitmap_collision_with_cell;
let sprite_collision;
let sprite_point_collision;
let sprite_rectangle_collision;
let apply_matrix_to_quad;
let apply_matrix_to_triangle;
let identity_matrix;
let matrix_inverse;
let matrix_multiply_point;
let matrix_multiply_matrix;
let matrix_multiply_vector;
let matrix_to_string;
let rotation_matrix;
let scale_matrix_from_point;
let scale_matrix_from_vector;
let scale_matrix;
let scale_rotate_translate_matrix;
let translation_matrix_to_point;
let translation_matrix_from_vector;
let translation_matrix;
let angle_between;
let dot_product;
let is_zero_vector;
let ray_intersection_point;
let unit_vector;
let vector_add;
let vector_angle;
let vector_from_angle;
let vector_from_line;
let vector_from_point_to_rect;
let vector_in_rect;
let vector_invert;
let vector_limit;
let vector_magnitude;
let vector_magnitude_sqared;
let vector_multiply;
let vector_normal;
let vector_out_of_circle_from_circle;
let vector_out_of_circle_from_point;
let vector_out_of_rect_from_circle;
let vector_out_of_rect_from_point;
let vector_out_of_rect_from_rect;
let vector_point_to_point;
let vector_subtract;
let vector_to_point;
let vector_to;
let vector_to_string;
let vectors_equal;
let vectors_not_equal;



let free_resource_bundle;
let has_resource_bundle;
let load_resource_bundle;


let resource_kind;

let path_to_resource;
let path_to_resources;
let path_to_resources_for_kind;
let set_resources_path;





let collision_test_kind;
let sprite_event_kind;

let center_point_sprite;
let create_sprite;
let create_sprite_with_animation;
let create_sprite_with_bitmap_named;
let create_sprite_named;
let create_sprite_named_with_animation;
let create_sprite_with_bitmap_and_animation_named;
let create_sprite_pack;
let current_sprite_pack;
let draw_all_sprites;
let draw_sprite_offset_by;
let draw_sprite;
let draw_sprite_offset_x_y;
let free_all_sprites;
let free_sprite;
let free_sprite_pack;
let has_sprite;
let has_sprite_pack;
let move_sprite;
let move_sprite_by_vector;
let move_sprite_by_vector_percent;
let move_sprite_percent;
let move_sprite_to;
let select_sprite_pack;
let sprite_add_layer;
let sprite_add_to_velocity;
let sprite_add_value;
let sprite_add_value_with_default;
let sprite_anchor_point;
let sprite_anchor_position;
let sprite_animation_has_ended;
let sprite_animation_name;
let sprite_at;
let sprite_bring_layer_forward;
let sprite_bring_layer_to_front;
let sprite_circle;
let sprite_collision_bitmap;
let sprite_collision_circle;
let sprite_collision_kind;
let sprite_collision_rectangle;
let sprite_current_cell;
let sprite_current_cell_rectangle;
let sprite_dx;
let sprite_dy;
let sprite_has_value;
let sprite_heading;
let sprite_height;
let sprite_hide_layer_named;
let sprite_hide_layer;
let sprite_layer_named;
let sprite_layer_at_index;
let sprite_layer_circle_named;
let sprite_layer_circle_at_index;
let sprite_layer_count;
let sprite_layer_height_named;
let sprite_layer_height;
let sprite_layer_index;
let sprite_layer_name;
let sprite_layer_offset_named;
let sprite_layer_offset;
let sprite_layer_rectangle_named;
let sprite_layer_rectangle_at_index;
let sprite_layer_width_named;
let sprite_layer_width;
let sprite_location_matrix;
let sprite_mass;
let sprite_move_from_anchor_point;
let sprite_move_to_taking_seconds;
let sprite_name;
let sprite_named;
let sprite_offscreen;
let sprite_on_screen_at_point;
let sprite_on_screen_at;
let sprite_position;
let sprite_replay_animation;
let sprite_replay_animation_with_sound;
let sprite_rotation;
let sprite_scale;
let sprite_screen_rectangle;
let sprite_send_layer_backward;
let sprite_send_layer_to_back;
let sprite_set_anchor_point;
let sprite_set_collision_bitmap;
let sprite_set_collision_kind;
let sprite_set_dx;
let sprite_set_dy;
let sprite_set_heading;
let sprite_set_layer_offset_named;
let sprite_set_layer_offset_at_index;
let sprite_set_mass;
let sprite_set_move_from_anchor_point;
let sprite_set_position;
let sprite_set_rotation;
let sprite_set_scale;
let sprite_set_speed;
let sprite_set_value_named;
let sprite_set_velocity;
let sprite_set_x;
let sprite_set_y;
let sprite_show_layer_named;
let sprite_show_layer;
let sprite_speed;
let sprite_start_animation_named;
let sprite_start_animation_named_with_sound;
let sprite_start_animation;
let sprite_start_animation_with_sound;
let sprite_toggle_layer_visible_named;
let sprite_toggle_layer_visible;
let sprite_value;
let sprite_value_count;
let sprite_velocity;
let sprite_visible_index_of_layer_named;
let sprite_visible_index_of_layer;
let sprite_visible_layer;
let sprite_visible_layer_count;
let sprite_visible_layer_id;
let sprite_width;
let sprite_x;
let sprite_y;
let update_all_sprites;
let update_all_sprites_percent;
let update_sprite;
let update_sprite_with_sound;
let update_sprite_percent;
let update_sprite_percent_with_sound;
let update_sprite_animation;
let update_sprite_animation_with_sound;
let update_sprite_animation_percent;
let update_sprite_animation_percent_with_sound;
let vector_from_center_sprite_to_point_point;
let vector_from_to;



let activate_advanced_terminal;
let advanced_terminal_active;
let clear_terminal;
let end_advanced_terminal;
let move_cursor_to;
let read_char;
let read_line;
let refresh_terminal;
let set_terminal_bold;
let set_terminal_colors;
let set_terminal_echo_input;
let terminal_height;
let terminal_width;
let write_char;
let write_double;
let write_int;
let write;
let write_at;
let write_line_char;
let write_line_empty;
let write_line_double;
let write_line_int;
let write_line;



let create_timer;
let free_all_timers;
let free_timer;
let has_timer__named;
let pause_timer__named;
let pause_timer;
let reset_timer__named;
let reset_timer;
let resume_timer__named;
let resume_timer;
let start_timer__named;
let start_timer;
let stop_timer__named;
let stop_timer;
let timer_named;
let timer_paused__named;
let timer_paused;
let timer_started__named;
let timer_started;
let timer_ticks__named;
let timer_ticks;


let drawing_dest;
let font_style;
let http_status_code;




let current_ticks;
let delay;
let display_dialog;
let file_as_string;
let convert_to_double;
let convert_to_integer;
let is_double;
let is_integer;
let is_number;
let to_lowercase;
let to_uppercase;
let trim;
let rnd_range;
let rnd;
let rnd_int;



let clear_window;
let close_all_windows;
let close_current_window;
let close_window_named;
let close_window;
let current_window;
let current_window_has_border;
let current_window_height;
let current_window_is_fullscreen;
let current_window_position;
let current_window_toggle_border;
let current_window_toggle_fullscreen;
let current_window_width;
let current_window_x;
let current_window_y;
let has_window;
let is_current_window;
let move_current_window_to;
let move_window_to_named;
let move_window_to;
let open_window;
let refresh_window;
let refresh_window_with_target_fps;
let resize_current_window;
let resize_window;
let set_current_window_named;
let set_current_window;
let window_caption;
let window_close_requested_named;
let window_close_requested;
let window_has_border_named;
let window_has_border;
let window_has_focus;
let window_height_named;
let window_height;
let window_is_fullscreen_named;
let window_is_fullscreen;
let window_named;
let window_position_named;
let window_position;
let window_set_icon;
let window_toggle_border_named;
let window_toggle_border;
let window_toggle_fullscreen_named;
let window_toggle_fullscreen;
let window_width_named;
let window_width;
let window_with_focus;
let window_x_named;
let window_x;
let window_y_named;
let window_y;



function initializeGlobalSplashKitScope(){
    SK = new Module.SplashKitJavascript();


    animation_count = SK.animation_count;
    animation_current_cell = SK.animation_current_cell;
    animation_current_vector = SK.animation_current_vector;
    animation_ended = SK.animation_ended;
    animation_entered_frame = SK.animation_entered_frame;
    animation_frame_time = SK.animation_frame_time;
    animation_index = SK.animation_index;
    animation_name = SK.animation_name;
    animation_script_name = SK.animation_script_name;
    animation_script_named = SK.animation_script_named;
    assign_animation_with_script = SK.assign_animation_with_script;
    assign_animation_with_script_and_sound = SK.assign_animation_with_script_and_sound;
    assign_animation_index_with_script = SK.assign_animation_index_with_script;
    assign_animation_index_with_script_and_sound = SK.assign_animation_index_with_script_and_sound;
    assign_animation_with_script_named = SK.assign_animation_with_script_named;
    assign_animation_with_script_named_and_sound = SK.assign_animation_with_script_named_and_sound;
    assign_animation_index = SK.assign_animation_index;
    assign_animation_index_with_sound = SK.assign_animation_index_with_sound;
    assign_animation = SK.assign_animation;
    assign_animation_with_sound = SK.assign_animation_with_sound;
    create_animation_from_index_with_sound = SK.create_animation_from_index_with_sound;
    create_animation = SK.create_animation;
    create_animation_with_sound = SK.create_animation_with_sound;
    create_animation_from_script_named = SK.create_animation_from_script_named;
    create_animation_from_script_named_with_sound = SK.create_animation_from_script_named_with_sound;
    free_all_animation_scripts = SK.free_all_animation_scripts;
    free_animation = SK.free_animation;
    free_animation_script = SK.free_animation_script;
    free_animation_script_with_name = SK.free_animation_script_with_name;
    has_animation_named = SK.has_animation_named;
    has_animation_script = SK.has_animation_script;
    load_animation_script = SK.load_animation_script;
    restart_animation = SK.restart_animation;
    restart_animation_with_sound = SK.restart_animation_with_sound;
    update_animation_percent_with_sound = SK.update_animation_percent_with_sound;
    update_animation = SK.update_animation;
    update_animation_percent = SK.update_animation_percent;



    fade_music_in_named = SK.fade_music_in_named;
    fade_music_in_named_with_times = SK.fade_music_in_named_with_times;
    fade_music_in = SK.fade_music_in;
    fade_music_in_with_times = SK.fade_music_in_with_times;
    fade_music_out = SK.fade_music_out;
    free_all_music = SK.free_all_music;
    free_music = SK.free_music;
    has_music = SK.has_music;
    load_music = SK.load_music;
    music_filename = SK.music_filename;
    music_name = SK.music_name;
    music_named = SK.music_named;
    music_playing = SK.music_playing;
    music_volume = SK.music_volume;
    pause_music = SK.pause_music;
    play_music_named = SK.play_music_named;
    play_music_named_with_times = SK.play_music_named_with_times;
    play_music = SK.play_music;
    play_music_with_times = SK.play_music_with_times;
    play_music_with_times_and_volume = SK.play_music_with_times_and_volume;
    resume_music = SK.resume_music;
    set_music_volume = SK.set_music_volume;
    stop_music = SK.stop_music;
    fade_all_sound_effects_out = SK.fade_all_sound_effects_out;
    fade_sound_effect_out = SK.fade_sound_effect_out;
    free_all_sound_effects = SK.free_all_sound_effects;
    free_sound_effect = SK.free_sound_effect;
    has_sound_effect = SK.has_sound_effect;
    load_sound_effect = SK.load_sound_effect;
    play_sound_effect_named = SK.play_sound_effect_named;
    play_sound_effect_named_with_volume = SK.play_sound_effect_named_with_volume;
    play_sound_effect_named_with_times = SK.play_sound_effect_named_with_times;
    play_sound_effect_named_with_times_and_volume = SK.play_sound_effect_named_with_times_and_volume;
    play_sound_effect = SK.play_sound_effect;
    play_sound_effect_with_volume = SK.play_sound_effect_with_volume;
    play_sound_effect_with_times = SK.play_sound_effect_with_times;
    play_sound_effect_with_times_and_volume = SK.play_sound_effect_with_times_and_volume;
    sound_effect_filename = SK.sound_effect_filename;
    sound_effect_name = SK.sound_effect_name;
    sound_effect_named = SK.sound_effect_named;
    sound_effect_playing_named = SK.sound_effect_playing_named;
    sound_effect_playing = SK.sound_effect_playing;
    stop_sound_effect_named = SK.stop_sound_effect_named;
    stop_sound_effect = SK.stop_sound_effect;
    audio_ready = SK.audio_ready;
    close_audio = SK.close_audio;
    open_audio = SK.open_audio;



    camera_position = SK.camera_position;
    camera_x = SK.camera_x;
    camera_y = SK.camera_y;
    center_camera_on_vector = SK.center_camera_on_vector;
    center_camera_on = SK.center_camera_on;
    move_camera_by_vector = SK.move_camera_by_vector;
    move_camera_by = SK.move_camera_by;
    move_camera_to_point = SK.move_camera_to_point;
    move_camera_to = SK.move_camera_to;
    point_in_window = SK.point_in_window;
    point_on_screen = SK.point_on_screen;
    rect_in_window = SK.rect_in_window;
    rect_on_screen = SK.rect_on_screen;
    screen_center = SK.screen_center;
    screen_rectangle = SK.screen_rectangle;
    set_camera_position = SK.set_camera_position;
    set_camera_x = SK.set_camera_x;
    set_camera_y = SK.set_camera_y;
    to_screen_point = SK.to_screen_point;
    to_screen_rectangle = SK.to_screen_rectangle;
    to_screen_x = SK.to_screen_x;
    to_screen_y = SK.to_screen_y;
    to_world = SK.to_world;
    to_world_x = SK.to_world_x;
    to_world_y = SK.to_world_y;
    vector_world_to_screen = SK.vector_world_to_screen;
    window_area = SK.window_area;



    alpha_of = SK.alpha_of;
    blue_of = SK.blue_of;
    brightness_of = SK.brightness_of;
    color_alice_blue = SK.color_alice_blue;
    color_antique_white = SK.color_antique_white;
    color_aqua = SK.color_aqua;
    color_aquamarine = SK.color_aquamarine;
    color_azure = SK.color_azure;
    color_beige = SK.color_beige;
    color_bisque = SK.color_bisque;
    color_black = SK.color_black;
    color_blanched_almond = SK.color_blanched_almond;
    color_blue = SK.color_blue;
    color_blue_violet = SK.color_blue_violet;
    color_bright_green = SK.color_bright_green;
    color_brown = SK.color_brown;
    color_burly_wood = SK.color_burly_wood;
    color_cadet_blue = SK.color_cadet_blue;
    color_chartreuse = SK.color_chartreuse;
    color_chocolate = SK.color_chocolate;
    color_coral = SK.color_coral;
    color_cornflower_blue = SK.color_cornflower_blue;
    color_cornsilk = SK.color_cornsilk;
    color_crimson = SK.color_crimson;
    color_cyan = SK.color_cyan;
    color_dark_blue = SK.color_dark_blue;
    color_dark_cyan = SK.color_dark_cyan;
    color_dark_goldenrod = SK.color_dark_goldenrod;
    color_dark_gray = SK.color_dark_gray;
    color_dark_green = SK.color_dark_green;
    color_dark_khaki = SK.color_dark_khaki;
    color_dark_magenta = SK.color_dark_magenta;
    color_dark_olive_green = SK.color_dark_olive_green;
    color_dark_orange = SK.color_dark_orange;
    color_dark_orchid = SK.color_dark_orchid;
    color_dark_red = SK.color_dark_red;
    color_dark_salmon = SK.color_dark_salmon;
    color_dark_sea_green = SK.color_dark_sea_green;
    color_dark_slate_blue = SK.color_dark_slate_blue;
    color_dark_slate_gray = SK.color_dark_slate_gray;
    color_dark_turquoise = SK.color_dark_turquoise;
    color_dark_violet = SK.color_dark_violet;
    color_deep_pink = SK.color_deep_pink;
    color_deep_sky_blue = SK.color_deep_sky_blue;
    color_dim_gray = SK.color_dim_gray;
    color_dodger_blue = SK.color_dodger_blue;
    color_firebrick = SK.color_firebrick;
    color_floral_white = SK.color_floral_white;
    color_forest_green = SK.color_forest_green;
    color_fuchsia = SK.color_fuchsia;
    color_gainsboro = SK.color_gainsboro;
    color_ghost_white = SK.color_ghost_white;
    color_gold = SK.color_gold;
    color_goldenrod = SK.color_goldenrod;
    color_gray = SK.color_gray;
    color_green = SK.color_green;
    color_green_yellow = SK.color_green_yellow;
    color_honeydew = SK.color_honeydew;
    color_hot_pink = SK.color_hot_pink;
    color_indian_red = SK.color_indian_red;
    color_indigo = SK.color_indigo;
    color_ivory = SK.color_ivory;
    color_khaki = SK.color_khaki;
    color_lavender = SK.color_lavender;
    color_lavender_blush = SK.color_lavender_blush;
    color_lawn_green = SK.color_lawn_green;
    color_lemon_chiffon = SK.color_lemon_chiffon;
    color_light_blue = SK.color_light_blue;
    color_light_coral = SK.color_light_coral;
    color_light_cyan = SK.color_light_cyan;
    color_light_goldenrod_yellow = SK.color_light_goldenrod_yellow;
    color_light_gray = SK.color_light_gray;
    color_light_green = SK.color_light_green;
    color_light_pink = SK.color_light_pink;
    color_light_salmon = SK.color_light_salmon;
    color_light_sea_green = SK.color_light_sea_green;
    color_light_sky_blue = SK.color_light_sky_blue;
    color_light_slate_gray = SK.color_light_slate_gray;
    color_light_steel_blue = SK.color_light_steel_blue;
    color_light_yellow = SK.color_light_yellow;
    color_lime = SK.color_lime;
    color_lime_green = SK.color_lime_green;
    color_linen = SK.color_linen;
    color_magenta = SK.color_magenta;
    color_maroon = SK.color_maroon;
    color_medium_aquamarine = SK.color_medium_aquamarine;
    color_medium_blue = SK.color_medium_blue;
    color_medium_orchid = SK.color_medium_orchid;
    color_medium_purple = SK.color_medium_purple;
    color_medium_sea_green = SK.color_medium_sea_green;
    color_medium_slate_blue = SK.color_medium_slate_blue;
    color_medium_spring_green = SK.color_medium_spring_green;
    color_medium_turquoise = SK.color_medium_turquoise;
    color_medium_violet_red = SK.color_medium_violet_red;
    color_midnight_blue = SK.color_midnight_blue;
    color_mint_cream = SK.color_mint_cream;
    color_misty_rose = SK.color_misty_rose;
    color_moccasin = SK.color_moccasin;
    color_navajo_white = SK.color_navajo_white;
    color_navy = SK.color_navy;
    color_old_lace = SK.color_old_lace;
    color_olive = SK.color_olive;
    color_olive_drab = SK.color_olive_drab;
    color_orange = SK.color_orange;
    color_orange_red = SK.color_orange_red;
    color_orchid = SK.color_orchid;
    color_pale_goldenrod = SK.color_pale_goldenrod;
    color_pale_green = SK.color_pale_green;
    color_pale_turquoise = SK.color_pale_turquoise;
    color_pale_violet_red = SK.color_pale_violet_red;
    color_papaya_whip = SK.color_papaya_whip;
    color_peach_puff = SK.color_peach_puff;
    color_peru = SK.color_peru;
    color_pink = SK.color_pink;
    color_plum = SK.color_plum;
    color_powder_blue = SK.color_powder_blue;
    color_purple = SK.color_purple;
    color_red = SK.color_red;
    color_rosy_brown = SK.color_rosy_brown;
    color_royal_blue = SK.color_royal_blue;
    color_saddle_brown = SK.color_saddle_brown;
    color_salmon = SK.color_salmon;
    color_sandy_brown = SK.color_sandy_brown;
    color_sea_green = SK.color_sea_green;
    color_sea_shell = SK.color_sea_shell;
    color_sienna = SK.color_sienna;
    color_silver = SK.color_silver;
    color_sky_blue = SK.color_sky_blue;
    color_slate_blue = SK.color_slate_blue;
    color_slate_gray = SK.color_slate_gray;
    color_snow = SK.color_snow;
    color_spring_green = SK.color_spring_green;
    color_steel_blue = SK.color_steel_blue;
    color_swinburne_red = SK.color_swinburne_red;
    color_tan = SK.color_tan;
    color_teal = SK.color_teal;
    color_thistle = SK.color_thistle;
    color_to_string = SK.color_to_string;
    color_tomato = SK.color_tomato;
    color_transparent = SK.color_transparent;
    color_turquoise = SK.color_turquoise;
    color_violet = SK.color_violet;
    color_wheat = SK.color_wheat;
    color_white = SK.color_white;
    color_white_smoke = SK.color_white_smoke;
    color_yellow = SK.color_yellow;
    color_yellow_green = SK.color_yellow_green;
    green_of = SK.green_of;
    hsb_color = SK.hsb_color;
    hue_of = SK.hue_of;
    random_color = SK.random_color;
    random_rgb_color = SK.random_rgb_color;
    red_of = SK.red_of;
    rgb_color_from_double = SK.rgb_color_from_double;
    rgb_color = SK.rgb_color;
    rgba_color_from_double = SK.rgba_color_from_double;
    rgba_color = SK.rgba_color;
    saturation_of = SK.saturation_of;
    string_to_color = SK.string_to_color;



    database_named = SK.database_named;
    error_message = SK.error_message;
    free_all_databases = SK.free_all_databases;
    free_all_query_results = SK.free_all_query_results;
    free_database = SK.free_database;
    free_database_named = SK.free_database_named;
    free_query_result = SK.free_query_result;
    get_next_row = SK.get_next_row;
    has_database = SK.has_database;
    has_row = SK.has_row;
    open_database = SK.open_database;
    query_column_count = SK.query_column_count;
    query_column_for_bool = SK.query_column_for_bool;
    query_column_for_double = SK.query_column_for_double;
    query_column_for_int = SK.query_column_for_int;
    query_column_for_string = SK.query_column_for_string;
    query_success = SK.query_success;
    query_type_of_col = SK.query_type_of_col;
    reset_query_result = SK.reset_query_result;
    rows_changed = SK.rows_changed;
    run_sql = SK.run_sql;
    run_sql_from_name = SK.run_sql_from_name;



    closest_point_on_line = SK.closest_point_on_line;
    closest_point_on_lines = SK.closest_point_on_lines;
    line_from_point_to_point = SK.line_from_point_to_point;
    line_from_start_with_offset = SK.line_from_start_with_offset;
    line_from_vector = SK.line_from_vector;
    line_from = SK.line_from;
    line_intersection_point = SK.line_intersection_point;
    line_intersects_circle = SK.line_intersects_circle;
    line_intersects_lines = SK.line_intersects_lines;
    line_intersects_rect = SK.line_intersects_rect;
    line_length = SK.line_length;
    line_length_squared = SK.line_length_squared;
    line_mid_point = SK.line_mid_point;
    line_normal = SK.line_normal;
    line_to_string = SK.line_to_string;
    lines_intersect = SK.lines_intersect;
    inset_rectangle = SK.inset_rectangle;
    intersection = SK.intersection;
    rectangle_around_circle = SK.rectangle_around_circle;
    rectangle_around_line = SK.rectangle_around_line;
    rectangle_around_quad = SK.rectangle_around_quad;
    rectangle_around_triangle = SK.rectangle_around_triangle;
    rectangle_bottom = SK.rectangle_bottom;
    rectangle_center = SK.rectangle_center;
    rectangle_from_point_and_size = SK.rectangle_from_point_and_size;
    rectangle_from_points = SK.rectangle_from_points;
    rectangle_from = SK.rectangle_from;
    rectangle_left = SK.rectangle_left;
    rectangle_offset_by = SK.rectangle_offset_by;
    rectangle_right = SK.rectangle_right;
    rectangle_to_string = SK.rectangle_to_string;
    rectangle_top = SK.rectangle_top;
    rectangles_intersect = SK.rectangles_intersect;
    triangle_barycenter = SK.triangle_barycenter;
    triangle_from = SK.triangle_from;
    triangle_from__from_coordinates = SK.triangle_from__from_coordinates;
    triangle_rectangle_intersect = SK.triangle_rectangle_intersect;
    triangle_to_string = SK.triangle_to_string;
    triangles_intersect = SK.triangles_intersect;
    point_at = SK.point_at;
    point_at_origin = SK.point_at_origin;
    point_in_circle = SK.point_in_circle;
    point_in_quad = SK.point_in_quad;
    point_in_rectangle = SK.point_in_rectangle;
    point_in_triangle = SK.point_in_triangle;
    point_line_distance = SK.point_line_distance;
    point_offset_by = SK.point_offset_by;
    point_offset_from_origin = SK.point_offset_from_origin;
    point_on_line = SK.point_on_line;
    point_on_line_with_proximity = SK.point_on_line_with_proximity;
    point_point_angle = SK.point_point_angle;
    point_point_distance = SK.point_point_distance;
    point_to_string = SK.point_to_string;
    random_bitmap_point = SK.random_bitmap_point;
    random_screen_point = SK.random_screen_point;
    random_window_point = SK.random_window_point;
    same_point = SK.same_point;
    center_point_circle = SK.center_point_circle;
    circle_at = SK.circle_at;
    circle_at_from_points = SK.circle_at_from_points;
    circle_radius = SK.circle_radius;
    circle_x = SK.circle_x;
    circle_y = SK.circle_y;
    circles_intersect = SK.circles_intersect;
    closest_point_on_circle = SK.closest_point_on_circle;
    closest_point_on_line_from_circle = SK.closest_point_on_line_from_circle;
    closest_point_on_rect_from_circle = SK.closest_point_on_rect_from_circle;
    distant_point_on_circle = SK.distant_point_on_circle;
    distant_point_on_circle_heading = SK.distant_point_on_circle_heading;
    ray_circle_intersect_distance = SK.ray_circle_intersect_distance;
    tangent_points = SK.tangent_points;
    widest_points = SK.widest_points;
    quad_from_points = SK.quad_from_points;
    quad_from_rectangle = SK.quad_from_rectangle;
    quad_from_rectangle_with_transformation = SK.quad_from_rectangle_with_transformation;
    quad_from = SK.quad_from;
    quads_intersect = SK.quads_intersect;
    set_quad_point = SK.set_quad_point;
    cosine = SK.cosine;
    sine = SK.sine;
    tangent = SK.tangent;



    draw_circle_record = SK.draw_circle_record;
    draw_circle_record_with_options = SK.draw_circle_record_with_options;
    draw_circle = SK.draw_circle;
    draw_circle_with_options = SK.draw_circle_with_options;
    draw_circle_on_bitmap = SK.draw_circle_on_bitmap;
    draw_circle_on_bitmap_with_options = SK.draw_circle_on_bitmap_with_options;
    draw_circle_on_window = SK.draw_circle_on_window;
    draw_circle_on_window_with_options = SK.draw_circle_on_window_with_options;
    fill_circle_record = SK.fill_circle_record;
    fill_circle_record_with_options = SK.fill_circle_record_with_options;
    fill_circle = SK.fill_circle;
    fill_circle_with_options = SK.fill_circle_with_options;
    fill_circle_on_bitmap = SK.fill_circle_on_bitmap;
    fill_circle_on_bitmap_with_options = SK.fill_circle_on_bitmap_with_options;
    fill_circle_on_window = SK.fill_circle_on_window;
    fill_circle_on_window_with_options = SK.fill_circle_on_window_with_options;
    draw_text_font_as_string = SK.draw_text_font_as_string;
    draw_text_with_options_font_as_string = SK.draw_text_with_options_font_as_string;
    draw_text_no_font_no_size = SK.draw_text_no_font_no_size;
    draw_text_no_font_no_size_with_options = SK.draw_text_no_font_no_size_with_options;
    draw_text = SK.draw_text;
    draw_text_with_options = SK.draw_text_with_options;
    draw_text_on_bitmap_font_as_string = SK.draw_text_on_bitmap_font_as_string;
    draw_text_on_bitmap_with_options_font_as_string = SK.draw_text_on_bitmap_with_options_font_as_string;
    draw_text_on_bitmap_no_font_no_size = SK.draw_text_on_bitmap_no_font_no_size;
    draw_text_on_bitmap_no_font_no_size_with_options = SK.draw_text_on_bitmap_no_font_no_size_with_options;
    draw_text_on_bitmap = SK.draw_text_on_bitmap;
    draw_text_on_bitmap_with_options = SK.draw_text_on_bitmap_with_options;
    draw_text_on_window_font_as_string = SK.draw_text_on_window_font_as_string;
    draw_text_on_window_with_options_font_as_string = SK.draw_text_on_window_with_options_font_as_string;
    draw_text_on_window_no_font_no_size = SK.draw_text_on_window_no_font_no_size;
    draw_text_on_window_no_font_no_size_with_options = SK.draw_text_on_window_no_font_no_size_with_options;
    draw_text_on_window = SK.draw_text_on_window;
    draw_text_on_window_with_options = SK.draw_text_on_window_with_options;
    font_has_size_name_as_string = SK.font_has_size_name_as_string;
    font_has_size = SK.font_has_size;
    font_load_size_name_as_string = SK.font_load_size_name_as_string;
    font_load_size = SK.font_load_size;
    font_named = SK.font_named;
    free_all_fonts = SK.free_all_fonts;
    free_font = SK.free_font;
    get_font_style_name_as_string = SK.get_font_style_name_as_string;
    get_font_style = SK.get_font_style;
    has_font = SK.has_font;
    has_font_name_as_string = SK.has_font_name_as_string;
    load_font = SK.load_font;
    set_font_style_name_as_string = SK.set_font_style_name_as_string;
    set_font_style = SK.set_font_style;
    text_height_font_named = SK.text_height_font_named;
    text_height = SK.text_height;
    text_width_font_named = SK.text_width_font_named;
    text_width = SK.text_width;
    draw_quad = SK.draw_quad;
    draw_quad_with_options = SK.draw_quad_with_options;
    draw_quad_on_bitmap = SK.draw_quad_on_bitmap;
    draw_quad_on_bitmap_with_options = SK.draw_quad_on_bitmap_with_options;
    draw_quad_on_window = SK.draw_quad_on_window;
    draw_quad_on_window_with_options = SK.draw_quad_on_window_with_options;
    draw_rectangle_record = SK.draw_rectangle_record;
    draw_rectangle_record_with_options = SK.draw_rectangle_record_with_options;
    draw_rectangle = SK.draw_rectangle;
    draw_rectangle_with_options = SK.draw_rectangle_with_options;
    draw_rectangle_on_bitmap_record = SK.draw_rectangle_on_bitmap_record;
    draw_rectangle_on_bitmap_record_with_options = SK.draw_rectangle_on_bitmap_record_with_options;
    draw_rectangle_on_bitmap = SK.draw_rectangle_on_bitmap;
    draw_rectangle_on_bitmap_with_options = SK.draw_rectangle_on_bitmap_with_options;
    draw_rectangle_on_window_record = SK.draw_rectangle_on_window_record;
    draw_rectangle_on_window_record_with_options = SK.draw_rectangle_on_window_record_with_options;
    draw_rectangle_on_window = SK.draw_rectangle_on_window;
    draw_rectangle_on_window_with_options = SK.draw_rectangle_on_window_with_options;
    fill_quad = SK.fill_quad;
    fill_quad_with_options = SK.fill_quad_with_options;
    fill_quad_on_bitmap = SK.fill_quad_on_bitmap;
    fill_quad_on_bitmap_with_options = SK.fill_quad_on_bitmap_with_options;
    fill_quad_on_window = SK.fill_quad_on_window;
    fill_quad_on_window_with_options = SK.fill_quad_on_window_with_options;
    fill_rectangle_record = SK.fill_rectangle_record;
    fill_rectangle_record_with_options = SK.fill_rectangle_record_with_options;
    fill_rectangle = SK.fill_rectangle;
    fill_rectangle_with_options = SK.fill_rectangle_with_options;
    fill_rectangle_on_bitmap_record = SK.fill_rectangle_on_bitmap_record;
    fill_rectangle_on_bitmap_record_with_options = SK.fill_rectangle_on_bitmap_record_with_options;
    fill_rectangle_on_bitmap = SK.fill_rectangle_on_bitmap;
    fill_rectangle_on_bitmap_with_options = SK.fill_rectangle_on_bitmap_with_options;
    fill_rectangle_on_window_record = SK.fill_rectangle_on_window_record;
    fill_rectangle_on_window_record_with_options = SK.fill_rectangle_on_window_record_with_options;
    fill_rectangle_on_window = SK.fill_rectangle_on_window;
    fill_rectangle_on_window_with_options = SK.fill_rectangle_on_window_with_options;
    current_clip = SK.current_clip;
    current_clip_for_bitmap = SK.current_clip_for_bitmap;
    current_clip_for_window = SK.current_clip_for_window;
    pop_clip_for_window = SK.pop_clip_for_window;
    pop_clip = SK.pop_clip;
    pop_clip_for_bitmap = SK.pop_clip_for_bitmap;
    push_clip_for_window = SK.push_clip_for_window;
    push_clip_for_bitmap = SK.push_clip_for_bitmap;
    push_clip = SK.push_clip;
    reset_clip_for_bitmap = SK.reset_clip_for_bitmap;
    reset_clip = SK.reset_clip;
    reset_clip_for_window = SK.reset_clip_for_window;
    set_clip = SK.set_clip;
    set_clip_for_bitmap = SK.set_clip_for_bitmap;
    set_clip_for_window = SK.set_clip_for_window;
    draw_triangle_record = SK.draw_triangle_record;
    draw_triangle_record_with_options = SK.draw_triangle_record_with_options;
    draw_triangle = SK.draw_triangle;
    draw_triangle_with_options = SK.draw_triangle_with_options;
    draw_triangle_on_bitmap_record = SK.draw_triangle_on_bitmap_record;
    draw_triangle_on_bitmap_record_with_options = SK.draw_triangle_on_bitmap_record_with_options;
    draw_triangle_on_bitmap = SK.draw_triangle_on_bitmap;
    draw_triangle_on_bitmap_with_options = SK.draw_triangle_on_bitmap_with_options;
    draw_triangle_on_window_record = SK.draw_triangle_on_window_record;
    draw_triangle_on_window_record_with_options = SK.draw_triangle_on_window_record_with_options;
    draw_triangle_on_window = SK.draw_triangle_on_window;
    draw_triangle_on_window_with_options = SK.draw_triangle_on_window_with_options;
    fill_triangle_record = SK.fill_triangle_record;
    fill_triangle_record_with_options = SK.fill_triangle_record_with_options;
    fill_triangle = SK.fill_triangle;
    fill_triangle_with_options = SK.fill_triangle_with_options;
    fill_triangle_on_bitmap_record = SK.fill_triangle_on_bitmap_record;
    fill_triangle_on_bitmap_record_with_options = SK.fill_triangle_on_bitmap_record_with_options;
    fill_triangle_on_bitmap = SK.fill_triangle_on_bitmap;
    fill_triangle_on_bitmap_with_options = SK.fill_triangle_on_bitmap_with_options;
    fill_triangle_on_window_record = SK.fill_triangle_on_window_record;
    fill_triangle_on_window_record_with_options = SK.fill_triangle_on_window_record_with_options;
    fill_triangle_on_window = SK.fill_triangle_on_window;
    fill_triangle_on_window_with_options = SK.fill_triangle_on_window_with_options;
    draw_ellipse_within_rectangle = SK.draw_ellipse_within_rectangle;
    draw_ellipse_within_rectangle_with_options = SK.draw_ellipse_within_rectangle_with_options;
    draw_ellipse = SK.draw_ellipse;
    draw_ellipse_with_options = SK.draw_ellipse_with_options;
    draw_ellipse_on_bitmap_within_rectangle = SK.draw_ellipse_on_bitmap_within_rectangle;
    draw_ellipse_on_bitmap_within_rectangle_with_options = SK.draw_ellipse_on_bitmap_within_rectangle_with_options;
    draw_ellipse_on_bitmap = SK.draw_ellipse_on_bitmap;
    draw_ellipse_on_bitmap_with_options = SK.draw_ellipse_on_bitmap_with_options;
    draw_ellipse_on_window_within_rectangle = SK.draw_ellipse_on_window_within_rectangle;
    draw_ellipse_on_window_within_rectangle_with_options = SK.draw_ellipse_on_window_within_rectangle_with_options;
    draw_ellipse_on_window = SK.draw_ellipse_on_window;
    draw_ellipse_on_window_with_options = SK.draw_ellipse_on_window_with_options;
    fill_ellipse_within_rectangle = SK.fill_ellipse_within_rectangle;
    fill_ellipse_within_rectangle_with_options = SK.fill_ellipse_within_rectangle_with_options;
    fill_ellipse = SK.fill_ellipse;
    fill_ellipse_with_options = SK.fill_ellipse_with_options;
    fill_ellipse_on_bitmap_within_rectangle = SK.fill_ellipse_on_bitmap_within_rectangle;
    fill_ellipse_on_bitmap_within_rectangle_with_options = SK.fill_ellipse_on_bitmap_within_rectangle_with_options;
    fill_ellipse_on_bitmap = SK.fill_ellipse_on_bitmap;
    fill_ellipse_on_bitmap_with_options = SK.fill_ellipse_on_bitmap_with_options;
    fill_ellipse_on_window_within_rectangle = SK.fill_ellipse_on_window_within_rectangle;
    fill_ellipse_on_window_within_rectangle_with_options = SK.fill_ellipse_on_window_within_rectangle_with_options;
    fill_ellipse_on_window = SK.fill_ellipse_on_window;
    fill_ellipse_on_window_with_options = SK.fill_ellipse_on_window_with_options;
    bitmap_bounding_circle = SK.bitmap_bounding_circle;
    bitmap_bounding_rectangle = SK.bitmap_bounding_rectangle;
    bitmap_bounding_rectangle_at_location = SK.bitmap_bounding_rectangle_at_location;
    bitmap_cell_center = SK.bitmap_cell_center;
    bitmap_cell_circle = SK.bitmap_cell_circle;
    bitmap_cell_circle_at_point = SK.bitmap_cell_circle_at_point;
    bitmap_cell_circle_at_point_with_scale = SK.bitmap_cell_circle_at_point_with_scale;
    bitmap_cell_columns = SK.bitmap_cell_columns;
    bitmap_cell_count = SK.bitmap_cell_count;
    bitmap_cell_height = SK.bitmap_cell_height;
    bitmap_cell_offset = SK.bitmap_cell_offset;
    bitmap_cell_rectangle = SK.bitmap_cell_rectangle;
    bitmap_cell_rectangle_at_point = SK.bitmap_cell_rectangle_at_point;
    bitmap_cell_rows = SK.bitmap_cell_rows;
    bitmap_cell_width = SK.bitmap_cell_width;
    bitmap_center = SK.bitmap_center;
    bitmap_filename = SK.bitmap_filename;
    bitmap_height = SK.bitmap_height;
    bitmap_height_of_bitmap_named = SK.bitmap_height_of_bitmap_named;
    bitmap_name = SK.bitmap_name;
    bitmap_named = SK.bitmap_named;
    bitmap_rectangle_of_cell = SK.bitmap_rectangle_of_cell;
    bitmap_set_cell_details = SK.bitmap_set_cell_details;
    bitmap_width = SK.bitmap_width;
    bitmap_width_of_bitmap_named = SK.bitmap_width_of_bitmap_named;
    clear_bitmap = SK.clear_bitmap;
    clear_bitmap_named = SK.clear_bitmap_named;
    create_bitmap = SK.create_bitmap;
    draw_bitmap = SK.draw_bitmap;
    draw_bitmap_with_options = SK.draw_bitmap_with_options;
    draw_bitmap_named = SK.draw_bitmap_named;
    draw_bitmap_named_with_options = SK.draw_bitmap_named_with_options;
    draw_bitmap_on_bitmap_on_bitmap = SK.draw_bitmap_on_bitmap_on_bitmap;
    draw_bitmap_on_bitmap_on_bitmap_with_options = SK.draw_bitmap_on_bitmap_on_bitmap_with_options;
    draw_bitmap_on_window = SK.draw_bitmap_on_window;
    draw_bitmap_on_window_with_options = SK.draw_bitmap_on_window_with_options;
    free_all_bitmaps = SK.free_all_bitmaps;
    free_bitmap = SK.free_bitmap;
    has_bitmap = SK.has_bitmap;
    load_bitmap = SK.load_bitmap;
    pixel_drawn_at_point_pt = SK.pixel_drawn_at_point_pt;
    pixel_drawn_at_point = SK.pixel_drawn_at_point;
    pixel_drawn_at_point_in_cell_pt = SK.pixel_drawn_at_point_in_cell_pt;
    pixel_drawn_at_point_in_cell = SK.pixel_drawn_at_point_in_cell;
    setup_collision_mask = SK.setup_collision_mask;
    draw_line_record = SK.draw_line_record;
    draw_line_record_with_options = SK.draw_line_record_with_options;
    draw_line_point_to_point = SK.draw_line_point_to_point;
    draw_line_point_to_point_with_options = SK.draw_line_point_to_point_with_options;
    draw_line = SK.draw_line;
    draw_line_with_options = SK.draw_line_with_options;
    draw_line_on_bitmap_record = SK.draw_line_on_bitmap_record;
    draw_line_on_bitmap_record_with_options = SK.draw_line_on_bitmap_record_with_options;
    draw_line_on_bitmap_point_to_point = SK.draw_line_on_bitmap_point_to_point;
    draw_line_on_bitmap_point_to_point_with_options = SK.draw_line_on_bitmap_point_to_point_with_options;
    draw_line_on_bitmap = SK.draw_line_on_bitmap;
    draw_line_on_bitmap_with_options = SK.draw_line_on_bitmap_with_options;
    draw_line_on_window_record = SK.draw_line_on_window_record;
    draw_line_on_window_record_with_options = SK.draw_line_on_window_record_with_options;
    draw_line_on_window_point_to_point = SK.draw_line_on_window_point_to_point;
    draw_line_on_window_point_to_point_with_options = SK.draw_line_on_window_point_to_point_with_options;
    draw_line_on_window = SK.draw_line_on_window;
    draw_line_on_window_with_options = SK.draw_line_on_window_with_options;
    option_defaults = SK.option_defaults;
    option_draw_to_bitmap = SK.option_draw_to_bitmap;
    option_draw_to_bitmap_with_options = SK.option_draw_to_bitmap_with_options;
    option_draw_to_window = SK.option_draw_to_window;
    option_draw_to_window_with_options = SK.option_draw_to_window_with_options;
    option_flip_x = SK.option_flip_x;
    option_flip_x_with_options = SK.option_flip_x_with_options;
    option_flip_xy = SK.option_flip_xy;
    option_flip_xy_with_options = SK.option_flip_xy_with_options;
    option_flip_y = SK.option_flip_y;
    option_flip_y_with_options = SK.option_flip_y_with_options;
    option_line_width = SK.option_line_width;
    option_line_width_with_options = SK.option_line_width_with_options;
    option_part_bmp = SK.option_part_bmp;
    option_part_bmp_with_options = SK.option_part_bmp_with_options;
    option_part_bmp_from_rectangle = SK.option_part_bmp_from_rectangle;
    option_part_bmp_from_rectangle_with_options = SK.option_part_bmp_from_rectangle_with_options;
    option_rotate_bmp = SK.option_rotate_bmp;
    option_rotate_bmp_with_anchor = SK.option_rotate_bmp_with_anchor;
    option_rotate_bmp_with_anchor_and_options = SK.option_rotate_bmp_with_anchor_and_options;
    option_rotate_bmp_with_options = SK.option_rotate_bmp_with_options;
    option_scale_bmp = SK.option_scale_bmp;
    option_scale_bmp_with_options = SK.option_scale_bmp_with_options;
    option_to_screen = SK.option_to_screen;
    option_to_screen_with_options = SK.option_to_screen_with_options;
    option_to_world = SK.option_to_world;
    option_to_world_with_options = SK.option_to_world_with_options;
    option_with_animation = SK.option_with_animation;
    option_with_animation_with_options = SK.option_with_animation_with_options;
    option_with_bitmap_cell = SK.option_with_bitmap_cell;
    option_with_bitmap_cell_with_options = SK.option_with_bitmap_cell_with_options;
    clear_screen_to_white = SK.clear_screen_to_white;
    clear_screen = SK.clear_screen;
    display_details = SK.display_details;
    display_height = SK.display_height;
    display_name = SK.display_name;
    display_width = SK.display_width;
    display_x = SK.display_x;
    display_y = SK.display_y;
    number_of_displays = SK.number_of_displays;
    refresh_screen = SK.refresh_screen;
    refresh_screen_with_target_fps = SK.refresh_screen_with_target_fps;
    save_bitmap = SK.save_bitmap;
    screen_height = SK.screen_height;
    screen_width = SK.screen_width;
    take_screenshot = SK.take_screenshot;
    take_screenshot_of_window = SK.take_screenshot_of_window;
    draw_pixel_at_point = SK.draw_pixel_at_point;
    draw_pixel_at_point_with_options = SK.draw_pixel_at_point_with_options;
    draw_pixel = SK.draw_pixel;
    draw_pixel_with_options = SK.draw_pixel_with_options;
    draw_pixel_on_bitmap_at_point = SK.draw_pixel_on_bitmap_at_point;
    draw_pixel_on_bitmap_at_point_with_options = SK.draw_pixel_on_bitmap_at_point_with_options;
    draw_pixel_on_bitmap = SK.draw_pixel_on_bitmap;
    draw_pixel_on_bitmap_with_options = SK.draw_pixel_on_bitmap_with_options;
    draw_pixel_on_window_at_point = SK.draw_pixel_on_window_at_point;
    draw_pixel_on_window_at_point_with_options = SK.draw_pixel_on_window_at_point_with_options;
    draw_pixel_on_window = SK.draw_pixel_on_window;
    draw_pixel_on_window_with_options = SK.draw_pixel_on_window_with_options;
    get_pixel_from_bitmap_at_point = SK.get_pixel_from_bitmap_at_point;
    get_pixel_from_bitmap = SK.get_pixel_from_bitmap;
    get_pixel_at_point = SK.get_pixel_at_point;
    get_pixel = SK.get_pixel;
    get_pixel_from_window_at_point = SK.get_pixel_from_window_at_point;
    get_pixel_from_window = SK.get_pixel_from_window;
    get_pixel_from_window_at_point_from_window = SK.get_pixel_from_window_at_point_from_window;
    get_pixel_from_window_from_window = SK.get_pixel_from_window_from_window;


    mouse_button = Module.mouse_button;
    key_code = Module.key_code;

    process_events = SK.process_events;
    quit_requested = SK.quit_requested;
    reset_quit = SK.reset_quit;
    draw_collected_text = SK.draw_collected_text;
    end_reading_text = SK.end_reading_text;
    end_reading_text_in_window = SK.end_reading_text_in_window;
    reading_text = SK.reading_text;
    reading_text_in_window = SK.reading_text_in_window;
    start_reading_text = SK.start_reading_text;
    start_reading_text_with_initial_text = SK.start_reading_text_with_initial_text;
    start_reading_text_in_window = SK.start_reading_text_in_window;
    start_reading_text_in_window_with_initial_text = SK.start_reading_text_in_window_with_initial_text;
    text_entry_cancelled = SK.text_entry_cancelled;
    text_entry_cancelled_in_window = SK.text_entry_cancelled_in_window;
    text_input = SK.text_input;
    text_input_in_window = SK.text_input_in_window;
    hide_mouse = SK.hide_mouse;
    mouse_clicked = SK.mouse_clicked;
    mouse_down = SK.mouse_down;
    mouse_movement = SK.mouse_movement;
    mouse_position = SK.mouse_position;
    mouse_position_vector = SK.mouse_position_vector;
    mouse_shown = SK.mouse_shown;
    mouse_up = SK.mouse_up;
    mouse_wheel_scroll = SK.mouse_wheel_scroll;
    mouse_x = SK.mouse_x;
    mouse_y = SK.mouse_y;
    move_mouse = SK.move_mouse;
    move_mouse_to_point = SK.move_mouse_to_point;
    show_mouse = SK.show_mouse;
    show_mouse_with_boolean = SK.show_mouse_with_boolean;
    any_key_pressed = SK.any_key_pressed;
    key_down = SK.key_down;
    key_name = SK.key_name;
    key_released = SK.key_released;
    key_typed = SK.key_typed;
    key_up = SK.key_up;



    create_json = SK.create_json;
    create_json_from_string = SK.create_json_from_string;
    free_all_json = SK.free_all_json;
    free_json = SK.free_json;
    json_count_keys = SK.json_count_keys;
    json_from_color = SK.json_from_color;
    json_from_file = SK.json_from_file;
    json_from_string = SK.json_from_string;
    json_has_key = SK.json_has_key;
    json_read_bool = SK.json_read_bool;
    json_read_number = SK.json_read_number;
    json_read_number_as_double = SK.json_read_number_as_double;
    json_read_number_as_int = SK.json_read_number_as_int;
    json_read_object = SK.json_read_object;
    json_read_string = SK.json_read_string;
    json_set_bool = SK.json_set_bool;
    json_set_number_integer = SK.json_set_number_integer;
    json_set_number_double = SK.json_set_number_double;
    json_set_number_float = SK.json_set_number_float;
    json_set_object = SK.json_set_object;
    json_set_string = SK.json_set_string;
    json_to_color = SK.json_to_color;
    json_to_file = SK.json_to_file;
    json_to_string = SK.json_to_string;


    log_level = Module.log_level;
    log_mode = Module.log_mode;

    close_log_process = SK.close_log_process;
    init_custom_logger = SK.init_custom_logger;
    init_custom_logger__name_override_mode = SK.init_custom_logger__name_override_mode;
    log = SK.log;


    http_method = Module.http_method;
    connection_type = Module.connection_type;

    download_bitmap = SK.download_bitmap;
    download_font = SK.download_font;
    download_music = SK.download_music;
    download_sound_effect = SK.download_sound_effect;
    free_response = SK.free_response;
    http_get = SK.http_get;
    http_response_to_string = SK.http_response_to_string;
    save_response_to_file = SK.save_response_to_file;
    has_incoming_requests = SK.has_incoming_requests;
    is_delete_request_for = SK.is_delete_request_for;
    is_get_request_for = SK.is_get_request_for;
    is_options_request_for = SK.is_options_request_for;
    is_post_request_for = SK.is_post_request_for;
    is_put_request_for = SK.is_put_request_for;
    is_request_for = SK.is_request_for;
    is_trace_request_for = SK.is_trace_request_for;
    next_web_request = SK.next_web_request;
    request_body = SK.request_body;
    request_has_query_parameter = SK.request_has_query_parameter;
    request_method = SK.request_method;
    request_query_parameter = SK.request_query_parameter;
    request_query_string = SK.request_query_string;
    request_uri = SK.request_uri;
    send_css_file_response = SK.send_css_file_response;
    send_file_response = SK.send_file_response;
    send_html_file_response = SK.send_html_file_response;
    send_javascript_file_response = SK.send_javascript_file_response;
    start_web_server_with_default_port = SK.start_web_server_with_default_port;
    start_web_server = SK.start_web_server;
    stop_web_server = SK.stop_web_server;
    accept_all_new_connections = SK.accept_all_new_connections;
    accept_new_connection = SK.accept_new_connection;
    broadcast_message = SK.broadcast_message;
    broadcast_message_to_all = SK.broadcast_message_to_all;
    broadcast_message_to_server_named = SK.broadcast_message_to_server_named;
    check_network_activity = SK.check_network_activity;
    clear_messages_from_name = SK.clear_messages_from_name;
    clear_messages_from_connection = SK.clear_messages_from_connection;
    clear_messages_from_server = SK.clear_messages_from_server;
    close_all_connections = SK.close_all_connections;
    close_all_servers = SK.close_all_servers;
    close_connection = SK.close_connection;
    close_connection_named = SK.close_connection_named;
    close_message = SK.close_message;
    close_server_named = SK.close_server_named;
    close_server = SK.close_server;
    connection_count_named = SK.connection_count_named;
    connection_count = SK.connection_count;
    connection_ip = SK.connection_ip;
    connection_ip_from_name = SK.connection_ip_from_name;
    connection_named = SK.connection_named;
    connection_port = SK.connection_port;
    connection_port_from_name = SK.connection_port_from_name;
    create_server_with_port = SK.create_server_with_port;
    create_server_with_port_and_protocol = SK.create_server_with_port_and_protocol;
    dec_to_hex = SK.dec_to_hex;
    fetch_new_connection = SK.fetch_new_connection;
    has_connection = SK.has_connection;
    has_messages = SK.has_messages;
    has_messages_on_connection = SK.has_messages_on_connection;
    has_messages_on_name = SK.has_messages_on_name;
    has_messages_on_server = SK.has_messages_on_server;
    has_new_connections = SK.has_new_connections;
    has_server = SK.has_server;
    hex_str_to_ipv4 = SK.hex_str_to_ipv4;
    hex_to_dec_string = SK.hex_to_dec_string;
    ipv4_to_dec = SK.ipv4_to_dec;
    ipv4_to_hex = SK.ipv4_to_hex;
    ipv4_to_str = SK.ipv4_to_str;
    is_connection_open = SK.is_connection_open;
    is_connection_open_from_name = SK.is_connection_open_from_name;
    last_connection_named = SK.last_connection_named;
    last_connection = SK.last_connection;
    message_connection = SK.message_connection;
    message_count_on_server = SK.message_count_on_server;
    message_count_on_connection = SK.message_count_on_connection;
    message_count_from_name = SK.message_count_from_name;
    message_data = SK.message_data;
    message_host = SK.message_host;
    message_port = SK.message_port;
    message_protocol = SK.message_protocol;
    my_ip = SK.my_ip;
    name_for_connection = SK.name_for_connection;
    new_connection_count = SK.new_connection_count;
    open_connection = SK.open_connection;
    open_connection_with_protocol = SK.open_connection_with_protocol;
    read_message = SK.read_message;
    read_message_from_connection = SK.read_message_from_connection;
    read_message_from_name = SK.read_message_from_name;
    read_message_from_server = SK.read_message_from_server;
    read_message_data_from_name = SK.read_message_data_from_name;
    read_message_data_from_connection = SK.read_message_data_from_connection;
    read_message_data_from_server = SK.read_message_data_from_server;
    reconnect = SK.reconnect;
    reconnect_from_name = SK.reconnect_from_name;
    release_all_connections = SK.release_all_connections;
    reset_new_connection_count = SK.reset_new_connection_count;
    retrieve_connection_named = SK.retrieve_connection_named;
    retrieve_connection = SK.retrieve_connection;
    send_message_to_connection = SK.send_message_to_connection;
    send_message_to_name = SK.send_message_to_name;
    server_has_new_connection_named = SK.server_has_new_connection_named;
    server_has_new_connection = SK.server_has_new_connection;
    server_named = SK.server_named;
    set_udp_packet_size = SK.set_udp_packet_size;
    udp_packet_size = SK.udp_packet_size;



    bitmap_circle_collision_at_point = SK.bitmap_circle_collision_at_point;
    bitmap_circle_collision = SK.bitmap_circle_collision;
    bitmap_circle_collision_for_cell_with_translation = SK.bitmap_circle_collision_for_cell_with_translation;
    bitmap_circle_collision_for_cell_at_point = SK.bitmap_circle_collision_for_cell_at_point;
    bitmap_circle_collision_for_cell = SK.bitmap_circle_collision_for_cell;
    bitmap_collision = SK.bitmap_collision;
    bitmap_collision_at_points = SK.bitmap_collision_at_points;
    bitmap_collision_for_cells_with_translations = SK.bitmap_collision_for_cells_with_translations;
    bitmap_collision_for_cells_at_points = SK.bitmap_collision_for_cells_at_points;
    bitmap_collision_for_cells = SK.bitmap_collision_for_cells;
    bitmap_point_collision_with_translation = SK.bitmap_point_collision_with_translation;
    bitmap_point_collision_at_point = SK.bitmap_point_collision_at_point;
    bitmap_point_collision = SK.bitmap_point_collision;
    bitmap_point_collision_for_cell_with_translation = SK.bitmap_point_collision_for_cell_with_translation;
    bitmap_point_collision_for_cell_at_point = SK.bitmap_point_collision_for_cell_at_point;
    bitmap_point_collision_for_cell = SK.bitmap_point_collision_for_cell;
    bitmap_rectangle_collision_at_point = SK.bitmap_rectangle_collision_at_point;
    bitmap_rectangle_collision = SK.bitmap_rectangle_collision;
    bitmap_rectangle_collision_for_cell_with_translation = SK.bitmap_rectangle_collision_for_cell_with_translation;
    bitmap_rectangle_collision_for_cell_at_point = SK.bitmap_rectangle_collision_for_cell_at_point;
    bitmap_rectangle_collision_for_cell = SK.bitmap_rectangle_collision_for_cell;
    sprite_bitmap_collision = SK.sprite_bitmap_collision;
    sprite_bitmap_collision_with_cell_at_point = SK.sprite_bitmap_collision_with_cell_at_point;
    sprite_bitmap_collision_with_cell = SK.sprite_bitmap_collision_with_cell;
    sprite_collision = SK.sprite_collision;
    sprite_point_collision = SK.sprite_point_collision;
    sprite_rectangle_collision = SK.sprite_rectangle_collision;
    apply_matrix_to_quad = SK.apply_matrix_to_quad;
    apply_matrix_to_triangle = SK.apply_matrix_to_triangle;
    identity_matrix = SK.identity_matrix;
    matrix_inverse = SK.matrix_inverse;
    matrix_multiply_point = SK.matrix_multiply_point;
    matrix_multiply_matrix = SK.matrix_multiply_matrix;
    matrix_multiply_vector = SK.matrix_multiply_vector;
    matrix_to_string = SK.matrix_to_string;
    rotation_matrix = SK.rotation_matrix;
    scale_matrix_from_point = SK.scale_matrix_from_point;
    scale_matrix_from_vector = SK.scale_matrix_from_vector;
    scale_matrix = SK.scale_matrix;
    scale_rotate_translate_matrix = SK.scale_rotate_translate_matrix;
    translation_matrix_to_point = SK.translation_matrix_to_point;
    translation_matrix_from_vector = SK.translation_matrix_from_vector;
    translation_matrix = SK.translation_matrix;
    angle_between = SK.angle_between;
    dot_product = SK.dot_product;
    is_zero_vector = SK.is_zero_vector;
    ray_intersection_point = SK.ray_intersection_point;
    unit_vector = SK.unit_vector;
    vector_add = SK.vector_add;
    vector_angle = SK.vector_angle;
    vector_from_angle = SK.vector_from_angle;
    vector_from_line = SK.vector_from_line;
    vector_from_point_to_rect = SK.vector_from_point_to_rect;
    vector_in_rect = SK.vector_in_rect;
    vector_invert = SK.vector_invert;
    vector_limit = SK.vector_limit;
    vector_magnitude = SK.vector_magnitude;
    vector_magnitude_sqared = SK.vector_magnitude_sqared;
    vector_multiply = SK.vector_multiply;
    vector_normal = SK.vector_normal;
    vector_out_of_circle_from_circle = SK.vector_out_of_circle_from_circle;
    vector_out_of_circle_from_point = SK.vector_out_of_circle_from_point;
    vector_out_of_rect_from_circle = SK.vector_out_of_rect_from_circle;
    vector_out_of_rect_from_point = SK.vector_out_of_rect_from_point;
    vector_out_of_rect_from_rect = SK.vector_out_of_rect_from_rect;
    vector_point_to_point = SK.vector_point_to_point;
    vector_subtract = SK.vector_subtract;
    vector_to_point = SK.vector_to_point;
    vector_to = SK.vector_to;
    vector_to_string = SK.vector_to_string;
    vectors_equal = SK.vectors_equal;
    vectors_not_equal = SK.vectors_not_equal;



    free_resource_bundle = SK.free_resource_bundle;
    has_resource_bundle = SK.has_resource_bundle;
    load_resource_bundle = SK.load_resource_bundle;


    resource_kind = Module.resource_kind;

    path_to_resource = SK.path_to_resource;
    path_to_resources = SK.path_to_resources;
    path_to_resources_for_kind = SK.path_to_resources_for_kind;
    set_resources_path = SK.set_resources_path;





    collision_test_kind = Module.collision_test_kind;
    sprite_event_kind = Module.sprite_event_kind;

    center_point_sprite = SK.center_point_sprite;
    create_sprite = SK.create_sprite;
    create_sprite_with_animation = SK.create_sprite_with_animation;
    create_sprite_with_bitmap_named = SK.create_sprite_with_bitmap_named;
    create_sprite_named = SK.create_sprite_named;
    create_sprite_named_with_animation = SK.create_sprite_named_with_animation;
    create_sprite_with_bitmap_and_animation_named = SK.create_sprite_with_bitmap_and_animation_named;
    create_sprite_pack = SK.create_sprite_pack;
    current_sprite_pack = SK.current_sprite_pack;
    draw_all_sprites = SK.draw_all_sprites;
    draw_sprite_offset_by = SK.draw_sprite_offset_by;
    draw_sprite = SK.draw_sprite;
    draw_sprite_offset_x_y = SK.draw_sprite_offset_x_y;
    free_all_sprites = SK.free_all_sprites;
    free_sprite = SK.free_sprite;
    free_sprite_pack = SK.free_sprite_pack;
    has_sprite = SK.has_sprite;
    has_sprite_pack = SK.has_sprite_pack;
    move_sprite = SK.move_sprite;
    move_sprite_by_vector = SK.move_sprite_by_vector;
    move_sprite_by_vector_percent = SK.move_sprite_by_vector_percent;
    move_sprite_percent = SK.move_sprite_percent;
    move_sprite_to = SK.move_sprite_to;
    select_sprite_pack = SK.select_sprite_pack;
    sprite_add_layer = SK.sprite_add_layer;
    sprite_add_to_velocity = SK.sprite_add_to_velocity;
    sprite_add_value = SK.sprite_add_value;
    sprite_add_value_with_default = SK.sprite_add_value_with_default;
    sprite_anchor_point = SK.sprite_anchor_point;
    sprite_anchor_position = SK.sprite_anchor_position;
    sprite_animation_has_ended = SK.sprite_animation_has_ended;
    sprite_animation_name = SK.sprite_animation_name;
    sprite_at = SK.sprite_at;
    sprite_bring_layer_forward = SK.sprite_bring_layer_forward;
    sprite_bring_layer_to_front = SK.sprite_bring_layer_to_front;
    sprite_circle = SK.sprite_circle;
    sprite_collision_bitmap = SK.sprite_collision_bitmap;
    sprite_collision_circle = SK.sprite_collision_circle;
    sprite_collision_kind = SK.sprite_collision_kind;
    sprite_collision_rectangle = SK.sprite_collision_rectangle;
    sprite_current_cell = SK.sprite_current_cell;
    sprite_current_cell_rectangle = SK.sprite_current_cell_rectangle;
    sprite_dx = SK.sprite_dx;
    sprite_dy = SK.sprite_dy;
    sprite_has_value = SK.sprite_has_value;
    sprite_heading = SK.sprite_heading;
    sprite_height = SK.sprite_height;
    sprite_hide_layer_named = SK.sprite_hide_layer_named;
    sprite_hide_layer = SK.sprite_hide_layer;
    sprite_layer_named = SK.sprite_layer_named;
    sprite_layer_at_index = SK.sprite_layer_at_index;
    sprite_layer_circle_named = SK.sprite_layer_circle_named;
    sprite_layer_circle_at_index = SK.sprite_layer_circle_at_index;
    sprite_layer_count = SK.sprite_layer_count;
    sprite_layer_height_named = SK.sprite_layer_height_named;
    sprite_layer_height = SK.sprite_layer_height;
    sprite_layer_index = SK.sprite_layer_index;
    sprite_layer_name = SK.sprite_layer_name;
    sprite_layer_offset_named = SK.sprite_layer_offset_named;
    sprite_layer_offset = SK.sprite_layer_offset;
    sprite_layer_rectangle_named = SK.sprite_layer_rectangle_named;
    sprite_layer_rectangle_at_index = SK.sprite_layer_rectangle_at_index;
    sprite_layer_width_named = SK.sprite_layer_width_named;
    sprite_layer_width = SK.sprite_layer_width;
    sprite_location_matrix = SK.sprite_location_matrix;
    sprite_mass = SK.sprite_mass;
    sprite_move_from_anchor_point = SK.sprite_move_from_anchor_point;
    sprite_move_to_taking_seconds = SK.sprite_move_to_taking_seconds;
    sprite_name = SK.sprite_name;
    sprite_named = SK.sprite_named;
    sprite_offscreen = SK.sprite_offscreen;
    sprite_on_screen_at_point = SK.sprite_on_screen_at_point;
    sprite_on_screen_at = SK.sprite_on_screen_at;
    sprite_position = SK.sprite_position;
    sprite_replay_animation = SK.sprite_replay_animation;
    sprite_replay_animation_with_sound = SK.sprite_replay_animation_with_sound;
    sprite_rotation = SK.sprite_rotation;
    sprite_scale = SK.sprite_scale;
    sprite_screen_rectangle = SK.sprite_screen_rectangle;
    sprite_send_layer_backward = SK.sprite_send_layer_backward;
    sprite_send_layer_to_back = SK.sprite_send_layer_to_back;
    sprite_set_anchor_point = SK.sprite_set_anchor_point;
    sprite_set_collision_bitmap = SK.sprite_set_collision_bitmap;
    sprite_set_collision_kind = SK.sprite_set_collision_kind;
    sprite_set_dx = SK.sprite_set_dx;
    sprite_set_dy = SK.sprite_set_dy;
    sprite_set_heading = SK.sprite_set_heading;
    sprite_set_layer_offset_named = SK.sprite_set_layer_offset_named;
    sprite_set_layer_offset_at_index = SK.sprite_set_layer_offset_at_index;
    sprite_set_mass = SK.sprite_set_mass;
    sprite_set_move_from_anchor_point = SK.sprite_set_move_from_anchor_point;
    sprite_set_position = SK.sprite_set_position;
    sprite_set_rotation = SK.sprite_set_rotation;
    sprite_set_scale = SK.sprite_set_scale;
    sprite_set_speed = SK.sprite_set_speed;
    sprite_set_value_named = SK.sprite_set_value_named;
    sprite_set_velocity = SK.sprite_set_velocity;
    sprite_set_x = SK.sprite_set_x;
    sprite_set_y = SK.sprite_set_y;
    sprite_show_layer_named = SK.sprite_show_layer_named;
    sprite_show_layer = SK.sprite_show_layer;
    sprite_speed = SK.sprite_speed;
    sprite_start_animation_named = SK.sprite_start_animation_named;
    sprite_start_animation_named_with_sound = SK.sprite_start_animation_named_with_sound;
    sprite_start_animation = SK.sprite_start_animation;
    sprite_start_animation_with_sound = SK.sprite_start_animation_with_sound;
    sprite_toggle_layer_visible_named = SK.sprite_toggle_layer_visible_named;
    sprite_toggle_layer_visible = SK.sprite_toggle_layer_visible;
    sprite_value = SK.sprite_value;
    sprite_value_count = SK.sprite_value_count;
    sprite_velocity = SK.sprite_velocity;
    sprite_visible_index_of_layer_named = SK.sprite_visible_index_of_layer_named;
    sprite_visible_index_of_layer = SK.sprite_visible_index_of_layer;
    sprite_visible_layer = SK.sprite_visible_layer;
    sprite_visible_layer_count = SK.sprite_visible_layer_count;
    sprite_visible_layer_id = SK.sprite_visible_layer_id;
    sprite_width = SK.sprite_width;
    sprite_x = SK.sprite_x;
    sprite_y = SK.sprite_y;
    update_all_sprites = SK.update_all_sprites;
    update_all_sprites_percent = SK.update_all_sprites_percent;
    update_sprite = SK.update_sprite;
    update_sprite_with_sound = SK.update_sprite_with_sound;
    update_sprite_percent = SK.update_sprite_percent;
    update_sprite_percent_with_sound = SK.update_sprite_percent_with_sound;
    update_sprite_animation = SK.update_sprite_animation;
    update_sprite_animation_with_sound = SK.update_sprite_animation_with_sound;
    update_sprite_animation_percent = SK.update_sprite_animation_percent;
    update_sprite_animation_percent_with_sound = SK.update_sprite_animation_percent_with_sound;
    vector_from_center_sprite_to_point_point = SK.vector_from_center_sprite_to_point_point;
    vector_from_to = SK.vector_from_to;



    activate_advanced_terminal = SK.activate_advanced_terminal;
    advanced_terminal_active = SK.advanced_terminal_active;
    clear_terminal = SK.clear_terminal;
    end_advanced_terminal = SK.end_advanced_terminal;
    move_cursor_to = SK.move_cursor_to;
    read_char = SK.read_char;
    read_line = SK.read_line;
    refresh_terminal = SK.refresh_terminal;
    set_terminal_bold = SK.set_terminal_bold;
    set_terminal_colors = SK.set_terminal_colors;
    set_terminal_echo_input = SK.set_terminal_echo_input;
    terminal_height = SK.terminal_height;
    terminal_width = SK.terminal_width;
    write_char = SK.write_char;
    write_double = SK.write_double;
    write_int = SK.write_int;
    write = SK.write;
    write_at = SK.write_at;
    write_line_char = SK.write_line_char;
    write_line_empty = SK.write_line_empty;
    write_line_double = SK.write_line_double;
    write_line_int = SK.write_line_int;
    write_line = SK.write_line;



    create_timer = SK.create_timer;
    free_all_timers = SK.free_all_timers;
    free_timer = SK.free_timer;
    has_timer__named = SK.has_timer__named;
    pause_timer__named = SK.pause_timer__named;
    pause_timer = SK.pause_timer;
    reset_timer__named = SK.reset_timer__named;
    reset_timer = SK.reset_timer;
    resume_timer__named = SK.resume_timer__named;
    resume_timer = SK.resume_timer;
    start_timer__named = SK.start_timer__named;
    start_timer = SK.start_timer;
    stop_timer__named = SK.stop_timer__named;
    stop_timer = SK.stop_timer;
    timer_named = SK.timer_named;
    timer_paused__named = SK.timer_paused__named;
    timer_paused = SK.timer_paused;
    timer_started__named = SK.timer_started__named;
    timer_started = SK.timer_started;
    timer_ticks__named = SK.timer_ticks__named;
    timer_ticks = SK.timer_ticks;


    drawing_dest = Module.drawing_dest;
    font_style = Module.font_style;
    http_status_code = Module.http_status_code;




    current_ticks = SK.current_ticks;
    delay = SK.delay;
    display_dialog = SK.display_dialog;
    file_as_string = SK.file_as_string;
    convert_to_double = SK.convert_to_double;
    convert_to_integer = SK.convert_to_integer;
    is_double = SK.is_double;
    is_integer = SK.is_integer;
    is_number = SK.is_number;
    to_lowercase = SK.to_lowercase;
    to_uppercase = SK.to_uppercase;
    trim = SK.trim;
    rnd_range = SK.rnd_range;
    rnd = SK.rnd;
    rnd_int = SK.rnd_int;



    clear_window = SK.clear_window;
    close_all_windows = SK.close_all_windows;
    close_current_window = SK.close_current_window;
    close_window_named = SK.close_window_named;
    close_window = SK.close_window;
    current_window = SK.current_window;
    current_window_has_border = SK.current_window_has_border;
    current_window_height = SK.current_window_height;
    current_window_is_fullscreen = SK.current_window_is_fullscreen;
    current_window_position = SK.current_window_position;
    current_window_toggle_border = SK.current_window_toggle_border;
    current_window_toggle_fullscreen = SK.current_window_toggle_fullscreen;
    current_window_width = SK.current_window_width;
    current_window_x = SK.current_window_x;
    current_window_y = SK.current_window_y;
    has_window = SK.has_window;
    is_current_window = SK.is_current_window;
    move_current_window_to = SK.move_current_window_to;
    move_window_to_named = SK.move_window_to_named;
    move_window_to = SK.move_window_to;
    open_window = SK.open_window;
    refresh_window = SK.refresh_window;
    refresh_window_with_target_fps = SK.refresh_window_with_target_fps;
    resize_current_window = SK.resize_current_window;
    resize_window = SK.resize_window;
    set_current_window_named = SK.set_current_window_named;
    set_current_window = SK.set_current_window;
    window_caption = SK.window_caption;
    window_close_requested_named = SK.window_close_requested_named;
    window_close_requested = SK.window_close_requested;
    window_has_border_named = SK.window_has_border_named;
    window_has_border = SK.window_has_border;
    window_has_focus = SK.window_has_focus;
    window_height_named = SK.window_height_named;
    window_height = SK.window_height;
    window_is_fullscreen_named = SK.window_is_fullscreen_named;
    window_is_fullscreen = SK.window_is_fullscreen;
    window_named = SK.window_named;
    window_position_named = SK.window_position_named;
    window_position = SK.window_position;
    window_set_icon = SK.window_set_icon;
    window_toggle_border_named = SK.window_toggle_border_named;
    window_toggle_border = SK.window_toggle_border;
    window_toggle_fullscreen_named = SK.window_toggle_fullscreen_named;
    window_toggle_fullscreen = SK.window_toggle_fullscreen;
    window_width_named = SK.window_width_named;
    window_width = SK.window_width;
    window_with_focus = SK.window_with_focus;
    window_x_named = SK.window_x_named;
    window_x = SK.window_x;
    window_y_named = SK.window_y_named;
    window_y = SK.window_y;


};